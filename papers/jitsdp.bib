@article{duan2021impact,
	title={The Impact of Duplicate Changes on Just-in-Time Defect Prediction},
	author={Duan, Ruifeng and Xu, Haitao and Fan, Yuanrui and Yan, Meng},
	journal={IEEE Transactions on Reliability},
	year={2021},
	publisher={IEEE}
}

@article{zhao2021simplified,
 abstract = {The popularity of mobile devices has led to an explosive growth in the number of mobile apps in which Android mobile apps are the mainstream. Android mobile apps usually undergo frequent update due to new requirements proposed by users. Just-in-time (JIT) defect prediction is appropriate for this scenario for quality assurance because it can provide timely feedback by determining whether a new code commit will introduce defects into the apps. As defect-prediction performance usually relies on the quality of the data representation and the used classification model, in this work, we propose a model, called Simplified Deep Forest (SDF), to conduct JIT defect prediction for Android mobile apps. SDF modifies a state-of-the-art deep forest model by removing the multigrained scanning operation that is designed for data with a high-dimensional feature space. It uses a cascade structure with ensemble forests for representation learning and classification. We conduct experiments on 10 Android mobile apps and experimental results show that SDF performs significantly better than comparative methods in terms of 3 performance indicators.},
 author = {K. {Zhao} and Z. {Xu} and T. {Zhang} and Y. {Tang} and M. {Yan}},
 doi = {10.1109/TR.2021.3060937},
 issn = {1558-1721},
 journal = {IEEE Transactions on Reliability},
 keywords = {Forestry;Mobile applications;Predictive models;Feature extraction;Task analysis;Open source software;Vegetation;Deep forest;feature representation learning;just-in-time (JIT) defect prediction;mobile apps;quality assurance},
 month = {},
 number = {},
 pages = {1-12},
 title = {Simplified Deep Forest Model Based Just-in-Time Defect Prediction for Android Mobile Apps},
 volume = {},
 year = {2021}
}

@inproceedings{hoang2020cc2vec,
	title={CC2Vec: Distributed representations of code changes},
	author={Hoang, Thong and Kang, Hong Jin and Lo, David and Lawall, Julia},
	booktitle={Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
	pages={518--529},
	year={2020}
}


@article{kang2020predicting,
	title={Predicting just-in-time software defects to reduce post-release quality costs in the maritime industry},
	author={Kang, Jonggu and Ryu, Duksan and Baik, Jongmoon},
	journal={Software: Practice and Experience},
	year={2020},
	publisher={Wiley Online Library}
}

@inproceedings{tabassum2020investigation,
	title={An investigation of cross-project learning in online just-in-time software defect prediction},
	author={Tabassum, Sadia and Minku, Leandro L and Feng, Danyi and Cabral, George G and Song, Liyan},
	booktitle={2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)},
	pages={554--565},
	year={2020},
	organization={IEEE}
}

@inproceedings{tian2020well,
  title={How Well Just-In-Time Defect Prediction Techniques Enhance Software Reliability?},
  author={Tian, Yuli and Li, Ning and Tian, Jeff and Zheng, Wei},
  booktitle={2020 IEEE 20th International Conference on Software Quality, Reliability and Security (QRS)},
  pages={212--221},
  year={2020},
  organization={IEEE}
}



@inproceedings{trautsch2020static,
	title={Static source code metrics and static analysis warnings for fine-grained just-in-time defect prediction},
	author={Trautsch, Alexander and Herbold, Steffen and Grabowski, Jens},
	booktitle={2020 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
	pages={127--138},
	year={2020},
	organization={IEEE}
}

@inproceedings{bennin2020revisiting,
	title={Revisiting the Impact of Concept Drift on Just-in-Time Quality Assurance},
	author={Bennin, Kwabena E and bin Ali, Nauman and B{\"o}rstler, J{\"u}rgen and Yu, Xiao},
	booktitle={2020 IEEE 20th International Conference on Software Quality, Reliability and Security (QRS)},
	pages={53--59},
	year={2020},
	organization={IEEE}
}

@article{zhu2020within,
	title={Within-project and cross-project just-in-time defect prediction based on denoising autoencoder and convolutional neural network},
	author={Zhu, Kun and Zhang, Nana and Ying, Shi and Zhu, Dandan},
	journal={IET Software},
	volume={14},
	number={3},
	pages={185--195},
	year={2020},
	publisher={IET}
}

@inproceedings{yan2020effort,
	title={Effort-aware just-in-time defect identification in practice: a case study at Alibaba},
	author={Yan, Meng and Xia, Xin and Fan, Yuanrui and Lo, David and Hassan, Ahmed E and Zhang, Xindong},
	booktitle={Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
	pages={1308--1319},
	year={2020}
}

@inproceedings{khanan2020jitbot,
	title={JITBot: An Explainable Just-In-Time Defect Prediction Bot},
	author={Khanan, Chaiyakarn and Luewichana, Worawit and Pruktharathikoon, Krissakorn and Jiarpakdee, Jirayus and Tantithamthavorn, Chakkrit and Choetkiertikul, Morakot and Ragkhitwetsagul, Chaiyong and Sunetnanta, Thanwadee},
	booktitle={2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
	pages={1336--1339},
	year={2020},
	organization={IEEE}
}

@article{li2020effort,
	title={Effort-Aware semi-Supervised just-in-Time defect prediction},
	author={Li, Weiwei and Zhang, Wenzhou and Jia, Xiuyi and Huang, Zhiqiu},
	journal={Information and Software Technology},
	volume={126},
	pages={106364},
	year={2020},
	publisher={Elsevier}
}

@article{kondo2020impact,
	title={The impact of context metrics on just-in-time defect prediction},
	author={Kondo, Masanari and German, Daniel M and Mizuno, Osamu and Choi, Eun-Hye},
	journal={Empirical Software Engineering},
	volume={25},
	number={1},
	pages={890--939},
	year={2020},
	publisher={Springer}
}

@inproceedings{catolino2019cross,
  title={Cross-project just-in-time bug prediction for mobile apps: an empirical assessment},
  author={Catolino, Gemma and Di Nucci, Dario and Ferrucci, Filomena},
  booktitle={2019 IEEE/ACM 6th International Conference on Mobile Software Engineering and Systems (MOBILESoft)},
  pages={99--110},
  year={2019},
  organization={IEEE}
}

@article{fan2019impact,
	title={The impact of changes mislabeled by szz on just-in-time defect prediction},
	author={Fan, Yuanrui and Xia, Xin and Da Costa, Daniel Alencar and Lo, David and Hassan, Ahmed E and Li, Shanping},
	journal={IEEE transactions on software engineering},
	year={2019},
	publisher={IEEE}
}

@inproceedings{hoang2019deepjit,
	title={DeepJIT: an end-to-end deep learning framework for just-in-time defect prediction},
	author={Hoang, Thong and Dam, Hoa Khanh and Kamei, Yasutaka and Lo, David and Ubayashi, Naoyasu},
	booktitle={2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR)},
	pages={34--45},
	year={2019},
	organization={IEEE}
}

@article{pascarella2019fine,
	title={Fine-grained just-in-time defect prediction},
	author={Pascarella, Luca and Palomba, Fabio and Bacchelli, Alberto},
	journal={Journal of Systems and Software},
	volume={150},
	pages={22--36},
	year={2019},
	publisher={Elsevier}
}

@article{huang2019revisiting,
	title={Revisiting supervised and unsupervised models for effort-aware just-in-time defect prediction},
	author={Huang, Qiao and Xia, Xin and Lo, David},
	journal={Empirical Software Engineering},
	volume={24},
	number={5},
	pages={2823--2862},
	year={2019},
	publisher={Springer}
}

@inproceedings{cabral2019class,
	title={Class imbalance evolution and verification latency in just-in-time software defect prediction},
	author={Cabral, George G and Minku, Leandro L and Shihab, Emad and Mujahid, Suhaib},
	booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)},
	pages={666--676},
	year={2019},
	organization={IEEE}
}

@inproceedings{zhang2019effort,
	title={Effort-Aware Tri-Training for Semi-supervised Just-in-Time Defect Prediction},
	author={Zhang, Wenzhou and Li, Weiwei and Jia, Xiuyi},
	booktitle={Pacific-Asia Conference on Knowledge Discovery and Data Mining},
	pages={293--304},
	year={2019},
	organization={Springer}
}

@article{chen2018multi,
	title={MULTI: Multi-objective effort-aware just-in-time software defect prediction},
	author={Chen, Xiang and Zhao, Yingquan and Wang, Qiuping and Yuan, Zhidan},
	journal={Information and Software Technology},
	volume={93},
	pages={1--13},
	year={2018},
	publisher={Elsevier}
}


@inproceedings{guo2018bridging,
	title={Bridging effort-aware prediction and strong classification: a just-in-time software defect prediction study},
	author={Guo, Yuchen and Shepperd, Martin and Li, Ning},
	booktitle={Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
	pages={325--326},
	year={2018}
}

@inproceedings{fu2017revisiting,
	title={Revisiting unsupervised learning for defect prediction},
	author={Fu, Wei and Menzies, Tim},
	booktitle={Proceedings of the 2017 11th joint meeting on foundations of software engineering},
	pages={72--83},
	year={2017}
}

@article{mcintosh2017fix,
	title={Are fix-inducing changes a moving target? a longitudinal case study of just-in-time defect prediction},
	author={McIntosh, Shane and Kamei, Yasutaka},
	journal={IEEE Transactions on Software Engineering},
	volume={44},
	number={5},
	pages={412--428},
	year={2017},
	publisher={IEEE}
}

@inproceedings{young2018replication,
	title={A replication study: just-in-time defect prediction with ensemble learning},
	author={Young, Steven and Abdou, Tamer and Bener, Ayse},
	booktitle={Proceedings of the 6th International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering},
	pages={42--47},
	year={2018}
}

@inproceedings{liu2017code,
	title={Code churn: A neglected metric in effort-aware just-in-time defect prediction},
	author={Liu, Jinping and Zhou, Yuming and Yang, Yibiao and Lu, Hongmin and Xu, Baowen},
	booktitle={2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
	pages={11--19},
	year={2017},
	organization={IEEE}
}


@inproceedings{huang2017supervised,
	title={Supervised vs unsupervised models: A holistic look at effort-aware just-in-time defect prediction},
	author={Huang, Qiao and Xia, Xin and Lo, David},
	booktitle={2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
	pages={159--170},
	year={2017},
	organization={IEEE}
}

@article{yang2017tlel,
	title={TLEL: A two-layer ensemble learning approach for just-in-time defect prediction},
	author={Yang, Xinli and Lo, David and Xia, Xin and Sun, Jianling},
	journal={Information and Software Technology},
	volume={87},
	pages={206--220},
	year={2017},
	publisher={Elsevier}
}

@article{kamei2016studying,
	title={Studying just-in-time defect prediction using cross-project models},
	author={Kamei, Yasutaka and Fukushima, Takafumi and McIntosh, Shane and Yamashita, Kazuhiro and Ubayashi, Naoyasu and Hassan, Ahmed E},
	journal={Empirical Software Engineering},
	volume={21},
	number={5},
	pages={2072--2106},
	year={2016},
	publisher={Springer}
	}

@inproceedings{tourani2016impact,
	title={The impact of human discussions on just-in-time quality assurance: An empirical study on openstack and eclipse},
	author={Tourani, Parastou and Adams, Bram},
	booktitle={2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
	volume={1},
	pages={189--200},
	year={2016},
	organization={IEEE}
}

@article{herzig2016impact,
	title={The impact of tangled code changes on defect prediction models},
	author={Herzig, Kim and Just, Sascha and Zeller, Andreas},
	journal={Empirical Software Engineering},
	volume={21},
	number={2},
	pages={303--336},
	year={2016},
	publisher={Springer}
}

@inproceedings{yang2016effort,
  title={Effort-aware just-in-time defect prediction: simple unsupervised
    models could be better than supervised models},
	author={Yang, Yibiao and Zhou, Yuming and Liu, Jinping and Zhao, Yangyang and Lu, Hongmin and Xu, Lei and Xu, Baowen and Leung, Hareton},
	booktitle={Proceedings of the 2016 24th ACM SIGSOFT international symposium on foundations of software engineering},
	pages={157--168},
	year={2016}
}

@inproceedings{yang2015deep,
	title={Deep learning for just-in-time defect prediction},
	author={Yang, Xinli and Lo, David and Xia, Xin and Zhang, Yun and Sun, Jianling},
	booktitle={2015 IEEE International Conference on Software Quality, Reliability and Security},
	pages={17--26},
	year={2015},
	organization={IEEE}
}


@inproceedings{fukushima2014empirical,
	title={An empirical study of just-in-time defect prediction using cross-project models},
	author={Fukushima, Takafumi and Kamei, Yasutaka and McIntosh, Shane and Yamashita, Kazuhiro and Ubayashi, Naoyasu},
	booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
	pages={172--181},
	year={2014}
}

@inproceedings{singh2013improving,
	title={Improving the quality of software by quantifying the code change
		metric and predicting the bugs},

	author={Singh, VB and Chaturvedi, KK},
	booktitle={International conference on computational science and its applications},
	pages={408--426},
	year={2013},
	organization={Springer}
}



@article{kamei2012large,
  title={A large-scale empirical study of just-in-time quality assurance},
  author={Kamei, Yasutaka and Shihab, Emad and Adams, Bram and Hassan, Ahmed E and Mockus, Audris and Sinha, Anand and Ubayashi, Naoyasu},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={6},
  pages={757--773},
  year={2012},
  publisher={IEEE}
}

@article{kim2008classifying,
	title={Classifying software changes: Clean or buggy?},
	author={Kim, Sunghun and Whitehead, E James and Zhang, Yi},
	journal={IEEE Transactions on Software Engineering},
	volume={34},
	number={2},
	pages={181--196},
	year={2008},
	publisher={IEEE}
}



@article{mockus2000predicting,
	title={Predicting risk of software changes},
	author={Mockus, Audris and Weiss, David M},
	journal={Bell Labs Technical Journal},
	volume={5},
	number={2},
	pages={169--180},
	year={2000},
	publisher={Wiley Online Library}
}

